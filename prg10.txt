import java.util.Scanner;

public class KnapsackProblem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        final int MAX_ITEMS = 50; // Maximum number of items
        float[] weight = new float[MAX_ITEMS];
        float[] profit = new float[MAX_ITEMS];
        float[] ratio = new float[MAX_ITEMS];
        float totalValue = 0, temp, capacity;
        
        // Input the number of items
        System.out.print("Enter the number of items: ");
        int n = scanner.nextInt();
        
        // Input weight and profit for each item
        for (int i = 0; i < n; i++) {
            System.out.printf("Enter Weight and Profit for item[%d]:\n", i);
            weight[i] = scanner.nextFloat();
            profit[i] = scanner.nextFloat();
        }
        
        // Input the capacity of the knapsack
        System.out.print("Enter the capacity of the knapsack: ");
        capacity = scanner.nextFloat();
        
        // Calculate the ratio of profit/weight for each item
        for (int i = 0; i < n; i++) {
            ratio[i] = profit[i] / weight[i];
        }
        
        // Sort items by ratio in descending order
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if (ratio[i] < ratio[j]) {
                    // Swap ratios
                    temp = ratio[j];
                    ratio[j] = ratio[i];
                    ratio[i] = temp;
                    
                    // Swap weights
                    temp = weight[j];
                    weight[j] = weight[i];
                    weight[i] = temp;
                    
                    // Swap profits
                    temp = profit[j];
                    profit[j] = profit[i];
                    profit[i] = temp;
                }
            }
        }
        
        // Greedily select items to maximize total value
        System.out.println("Knapsack problem using Greedy Algorithm:");
        int i;
        for (i = 0; i < n; i++) {
            if (weight[i] > capacity) break;
            else {
                totalValue += profit[i];
                capacity -= weight[i];
            }
        }
        
        // If there is still capacity left, take the fraction of the next item
        if (i < n) {
            totalValue += ratio[i] * capacity;
        }
        
        System.out.println("\nThe maximum value is: " + totalValue);
        scanner.close();
    }
}
